{"ast":null,"code":"var _jsxFileName = \"A:\\\\Tritron Project\\\\Tritron_React_App\\\\React_App\\\\src\\\\components\\\\UpdateDiscountedPrice.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const UpdateDiscountedPricePage = () => {\n//   const [categories, setCategories] = useState([]);\n//   const [brands, setBrands] = useState([]);\n//   const [models, setModels] = useState([]);\n//   const [products, setProducts] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [selectedBrand, setSelectedBrand] = useState('');\n//   const [selectedModel, setSelectedModel] = useState('');\n//   const [discountValue, setDiscountValue] = useState('');\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch categories on component mount\n//     fetch('http://localhost:8080/getAllCategories')\n//       .then(response => response.json())\n//       .then(data => setCategories(data))\n//       .catch(error => console.error('Error fetching categories:', error));\n//   }, []);\n\n//   const handleCategoryChange = (event) => {\n//     const selectedCategoryId = event.target.value;\n//     setSelectedCategory(selectedCategoryId);\n//   };\n\n//   useEffect(() => {\n//     // Fetch all brands\n//     fetch('http://localhost:8080/getAllBrands')\n//       .then(response => response.json())\n//       .then(data => setBrands(data))\n//       .catch(error => console.error('Error fetching brands:', error));\n//   }, [selectedCategory]);\n\n//   const handleBrandChange = (event) => {\n//     const selectedBrandId = event.target.value;\n//     setSelectedBrand(selectedBrandId);\n\n//     // Fetch models based on selected brand\n//     fetch(`http://localhost:8080/getModels?categoryid=${selectedCategory}&brandid=${selectedBrandId}`)\n//       .then(response => response.json())\n//       .then(data => setModels(data))\n//       .catch(error => console.error('Error fetching models:', error));\n//   };\n\n//   const handleModelChange = (event) => {\n//     const selectedModelId = event.target.value;\n//     setSelectedModel(selectedModelId);\n\n//     // Fetch products based on selected model\n//     fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\n//       .then(response => response.json())\n//       .then(data => setProducts(data))\n//       .catch(error => console.error('Error fetching products:', error));\n//   };\n\n//   const handleDiscountValueChange = (event) => {\n//     setDiscountValue(event.target.value);\n//   };\n\n//   const handleSetDiscount = () => {\n//     // Assuming 'pid' is the product id and 'dp' is the discounted price\n//     const requestBody = {\n//       pid: selectedProductId,\n//       dp: discountValue\n//     };\n\n//     // Update discounted price on the backend\n//     fetch('http://localhost:8080/updateDiscountedPrice', {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         // Add any additional headers if needed\n//       },\n//       body: JSON.stringify(requestBody),\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           console.log('Discounted price updated successfully');\n//         } else {\n//           console.error('Failed to update discounted price');\n//         }\n//       })\n//       .catch(error => console.error('Error updating discounted price:', error));\n//   };\n\n//   return (\n//     <div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Product ID</th>\n//             <th>Model ID</th>\n//             <th>Base Price</th>\n//             <th>Discounted Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {products.map(product => (\n//             <tr key={product.product_id}>\n//               <td>{product.product_id}</td>\n//               <td>{product.model_id}</td>\n//               <td>{product.base_price}</td>\n//               <td>{product.discounted_price}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       <div>\n//         <label>Select Category:</label>\n//         <select value={selectedCategory} onChange={handleCategoryChange}>\n//           <option value=\"\">Select Category</option>\n//           {categories.map(category => (\n//             <option key={category.id} value={category.id}>{category.name}</option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div>\n//         <label>Select Brand:</label>\n//         <select value={selectedBrand} onChange={handleBrandChange}>\n//           <option value=\"\">Select Brand</option>\n//           {brands.map(brand => (\n//             <option key={brand.id} value={brand.id}>{brand.name}</option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div>\n//         <label>Select Model:</label>\n//         <select value={selectedModel} onChange={handleModelChange}>\n//           <option value=\"\">Select Model</option>\n//           {models.map(model => (\n//             <option key={model.id} value={model.id}>{model.name}</option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div>\n//         <label>Discount Value:</label>\n//         <input type=\"text\" value={discountValue} onChange={handleDiscountValueChange} />\n//       </div>\n\n//       <button onClick={handleSetDiscount}>Set New Discounted Value</button>\n//     </div>\n//   );\n// };\n\n// export default UpdateDiscountedPricePage;\n\n////////////////////////////////////////\n\n// import React, { useState, useEffect } from 'react';\n// import './UpdateDiscountedPrice.css';\n\n// const UpdateDiscountedPricePage = () => {\n//   const [categories, setCategories] = useState([]);\n//   const [brands, setBrands] = useState([]);\n//   const [models, setModels] = useState([]);\n//   const [products, setProducts] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [selectedBrand, setSelectedBrand] = useState('');\n//   const [selectedModel, setSelectedModel] = useState(0);\n//   const [discountValue, setDiscountValue] = useState('');\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch categories on component mount\n//     fetch('http://localhost:8080/getAllCategories')\n//       .then(response => response.json())\n//       .then(data => setCategories(data))\n//       .catch(error => console.error('Error fetching categories:', error));\n\n//       fetch('http://localhost:8080/getAllBrands')\n//       .then(response => response.json())\n//       .then(data => setBrands(data))\n//       .catch(error => console.error('Error fetching brands:', error));\n//   }, []);\n\n//   const handleCategoryChange = (event) => {\n//     const selectedCategoryId = event.target.value;\n//     setSelectedCategory(selectedCategoryId);\n//   };\n\n//   /*useEffect(() => {\n//     // Fetch all brands\n//     fetch('http://localhost:8080/getAllBrands')\n//       .then(response => response.json())\n//       .then(data => setBrands(data))\n//       .catch(error => console.error('Error fetching brands:', error));\n//   }, [selectedCategory]); */\n\n//   const handleBrandChange = (event) => {\n//     const selectedBrandId = event.target.value;\n//     setSelectedBrand(selectedBrandId);\n\n//     // Fetch models based on selected brand\n//     fetch(`http://localhost:8080/getModels?categoryid=${selectedCategory}&brandid=${selectedBrandId}`)\n//       .then(response => response.json())\n//       .then(data => setModels(data))\n//       .catch(error => console.error('Error fetching models:', error));\n//   };\n\n//   // const handleModelChange = (event) => {\n//   //   const selectedModelId = event.target.value;\n//   //   setSelectedModel(selectedModelId);\n\n//   //   // Fetch products based on selected model\n//   //   fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\n//   //     .then(response => response.json())\n//   //     .then(data => setProducts(data))\n//   //     .catch(error => console.error('Error fetching products:', error));\n//   // };\n//   const handleModelChange = (event) => {\n//   const selectedModelId = event.target.value;\n//   setSelectedModel(selectedModelId);\n\n//   // Fetch products based on selected model\n//   fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\n//     .then(response => response.json())\n//     .then(data => setProducts(data))\n//     .catch(error => console.error('Error fetching products:', error));\n\n//   // Reset models state to an empty array to avoid \"map is not a function\" error\n//   //setModels([]);\n// };\n\n//   const handleDiscountValueChange = (event) => {\n//     setDiscountValue(event.target.value);\n//   };\n\n//   const handleSetDiscount = () => {\n//     // Assuming 'pid' is the product id and 'dp' is the discounted price\n//     const requestBody = {\n//       pid: selectedProductId,\n//       dp: discountValue\n//     };\n\n//     // Update discounted price on the backend\n//     fetch('http://localhost:8080/updateDiscountedPrice', {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         // Add any additional headers if needed\n//       },\n//       body: JSON.stringify({\n//          mid: selectedModel,\n//          sid:  ,\n//       dp: discountValue\n//       }),\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           console.log('Discounted price updated successfully');\n//         } else {\n//           console.error('Failed to update discounted price');\n//         }\n//       })\n//       .catch(error => console.error('Error updating discounted price:', error));\n//   };\n\n//   return (\n//     <div>\n//       {/* <table>\n//         <thead>\n//           <tr>\n//             <th>Product ID</th>\n//             <th>Model ID</th>\n//             <th>Base Price</th>\n//             <th>Discounted Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {products.map(product => (\n//             <tr key={product.product_id}>\n//               <td>{product.product_id}</td>\n//               <td>{product.model_id}</td>\n//               <td>{product.base_price}</td>\n//               <td>{product.discounted_price}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table> */}\n\n// <div className=\"form-group\">\n//         <label>Select Category:</label>\n//         <select className=\"form-control\" value={selectedCategory} onChange={handleCategoryChange}>\n//           <option value=\"\">Select Category</option>\n//           {categories.map(category => (\n//             <option key={category.categoryId} value={category.categoryId}>{category.category_Name}</option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group\">\n//         <label>Select Brand:</label>\n//         <select className=\"form-control\" value={selectedBrand} onChange={handleBrandChange}>\n//           <option value=\"\">Select Brand</option>\n//           {brands.map(brand => (\n//             <option key={brand.brand_id} value={brand.brand_id}>{brand.brand_name}</option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group\">\n//         <label>Select Model:</label>\n//         <select className=\"form-control\" value={selectedModel} onChange={handleModelChange}>\n//           <option value=\"\">Select Model</option>\n//           {models.map(model => (\n//             <option key={model.model_Id} value={model.model_Id}>{model.model_Name}</option>\n//           ))}\n//         </select>\n//       </div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Product ID</th>\n//             <th>Model ID</th>\n//             <th>Base Price</th>\n//             <th>Discounted Price</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {products.map(product => (\n//             <tr key={product.product_id}>\n//               <td>{product.product_id}</td>\n//               <td>{product.model_id}</td>\n//               <td>{product.base_price}</td>\n//               <td>{product.discounted_price}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       <div>\n//         <label>Discount Value:</label>\n//         <input type=\"text\" value={discountValue} onChange={handleDiscountValueChange} />\n//       </div>\n\n//       <button onClick={handleSetDiscount}>Set New Discounted Value</button>\n\n//       <p> {JSON.stringify(models)}</p>\n\n//     </div>\n//   );\n// };\n\n// export default UpdateDiscountedPricePage;\n\n//23-02-2024 at 11:02\n\nimport React, { useState, useEffect } from 'react';\nimport '../CSS Files/UpdateDiscountedPrice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateDiscountedPricePage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [models, setModels] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedBrand, setSelectedBrand] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [discountValue, setDiscountValue] = useState('');\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  useEffect(() => {\n    // Fetch categories on component mount\n    fetch('http://localhost:8080/getAllCategories').then(response => response.json()).then(data => setCategories(data)).catch(error => console.error('Error fetching categories:', error));\n\n    // Fetch all brands\n    fetch('http://localhost:8080/getAllBrands').then(response => response.json()).then(data => setBrands(data)).catch(error => console.error('Error fetching brands:', error));\n  }, []);\n  const handleCategoryChange = event => {\n    const selectedCategoryId = event.target.value;\n    setSelectedCategory(selectedCategoryId);\n  };\n  const handleBrandChange = event => {\n    const selectedBrandId = event.target.value;\n    setSelectedBrand(selectedBrandId);\n\n    // Fetch models based on selected brand\n    fetch(`http://localhost:8080/getModels?categoryid=${selectedCategory}&brandid=${selectedBrandId}`).then(response => response.json()).then(data => setModels(data)).catch(error => console.error('Error fetching models:', error));\n  };\n  const handleModelChange = event => {\n    const selectedModelId = event.target.value;\n    setSelectedModel(selectedModelId);\n\n    // Fetch products based on selected model\n    fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`).then(response => response.json()).then(data => setProducts(data)).catch(error => console.error('Error fetching products:', error));\n  };\n  const handleDiscountValueChange = event => {\n    setDiscountValue(event.target.value);\n  };\n  const handleSetDiscount = () => {\n    // Assuming 'pid' is the product id and 'dp' is the discounted price\n    const requestBody = {\n      pid: selectedProductId,\n      dp: discountValue\n    };\n\n    // Update discounted price on the backend\n    fetch('http://localhost:8080/updateDiscountedPrice', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n        // Add any additional headers if needed\n      },\n      body: JSON.stringify({\n        mid: selectedModel,\n        sid: selectedProductId,\n        dp: discountValue\n      })\n    }).then(response => {\n      if (response.ok) {\n        console.log('Discounted price updated successfully');\n      } else {\n        console.error('Failed to update discounted price');\n      }\n    }).catch(error => console.error('Error updating discounted price:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.categoryId,\n          children: category.category_Name\n        }, category.categoryId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Brand:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: selectedBrand,\n        onChange: handleBrandChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), brands.map(brand => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: brand.brand_id,\n          children: brand.brand_name\n        }, brand.brand_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Model:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: selectedModel,\n        onChange: handleModelChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: model.model_Id,\n          children: model.model_Name\n        }, model.model_Id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Model ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Base Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Discounted Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.product_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.model_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.base_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.discounted_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, product.product_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Discount Value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: discountValue,\n        onChange: handleDiscountValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetDiscount,\n      children: \"Set New Discounted Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", JSON.stringify(models)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateDiscountedPricePage, \"I3fqANTSqAg78E/p3H2BEh7biJg=\");\n_c = UpdateDiscountedPricePage;\nexport default UpdateDiscountedPricePage;\nvar _c;\n$RefreshReg$(_c, \"UpdateDiscountedPricePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateDiscountedPricePage","_s","categories","setCategories","brands","setBrands","models","setModels","products","setProducts","selectedCategory","setSelectedCategory","selectedBrand","setSelectedBrand","selectedModel","setSelectedModel","discountValue","setDiscountValue","selectedProductId","setSelectedProductId","fetch","then","response","json","data","catch","error","console","handleCategoryChange","event","selectedCategoryId","target","value","handleBrandChange","selectedBrandId","handleModelChange","selectedModelId","handleDiscountValueChange","handleSetDiscount","requestBody","pid","dp","method","headers","body","JSON","stringify","mid","sid","ok","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","category","categoryId","category_Name","brand","brand_id","brand_name","model","model_Id","model_Name","product","product_id","model_id","base_price","discounted_price","type","onClick","_c","$RefreshReg$"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/UpdateDiscountedPrice.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const UpdateDiscountedPricePage = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [brands, setBrands] = useState([]);\r\n//   const [models, setModels] = useState([]);\r\n//   const [products, setProducts] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState('');\r\n//   const [selectedBrand, setSelectedBrand] = useState('');\r\n//   const [selectedModel, setSelectedModel] = useState('');\r\n//   const [discountValue, setDiscountValue] = useState('');\r\n//   const [selectedProductId, setSelectedProductId] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch categories on component mount\r\n//     fetch('http://localhost:8080/getAllCategories')\r\n//       .then(response => response.json())\r\n//       .then(data => setCategories(data))\r\n//       .catch(error => console.error('Error fetching categories:', error));\r\n//   }, []);\r\n\r\n//   const handleCategoryChange = (event) => {\r\n//     const selectedCategoryId = event.target.value;\r\n//     setSelectedCategory(selectedCategoryId);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Fetch all brands\r\n//     fetch('http://localhost:8080/getAllBrands')\r\n//       .then(response => response.json())\r\n//       .then(data => setBrands(data))\r\n//       .catch(error => console.error('Error fetching brands:', error));\r\n//   }, [selectedCategory]);\r\n\r\n//   const handleBrandChange = (event) => {\r\n//     const selectedBrandId = event.target.value;\r\n//     setSelectedBrand(selectedBrandId);\r\n\r\n//     // Fetch models based on selected brand\r\n//     fetch(`http://localhost:8080/getModels?categoryid=${selectedCategory}&brandid=${selectedBrandId}`)\r\n//       .then(response => response.json())\r\n//       .then(data => setModels(data))\r\n//       .catch(error => console.error('Error fetching models:', error));\r\n//   };\r\n\r\n//   const handleModelChange = (event) => {\r\n//     const selectedModelId = event.target.value;\r\n//     setSelectedModel(selectedModelId);\r\n\r\n//     // Fetch products based on selected model\r\n//     fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\r\n//       .then(response => response.json())\r\n//       .then(data => setProducts(data))\r\n//       .catch(error => console.error('Error fetching products:', error));\r\n//   };\r\n\r\n//   const handleDiscountValueChange = (event) => {\r\n//     setDiscountValue(event.target.value);\r\n//   };\r\n\r\n//   const handleSetDiscount = () => {\r\n//     // Assuming 'pid' is the product id and 'dp' is the discounted price\r\n//     const requestBody = {\r\n//       pid: selectedProductId,\r\n//       dp: discountValue\r\n//     };\r\n\r\n//     // Update discounted price on the backend\r\n//     fetch('http://localhost:8080/updateDiscountedPrice', {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         // Add any additional headers if needed\r\n//       },\r\n//       body: JSON.stringify(requestBody),\r\n//     })\r\n//       .then(response => {\r\n//         if (response.ok) {\r\n//           console.log('Discounted price updated successfully');\r\n//         } else {\r\n//           console.error('Failed to update discounted price');\r\n//         }\r\n//       })\r\n//       .catch(error => console.error('Error updating discounted price:', error));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Product ID</th>\r\n//             <th>Model ID</th>\r\n//             <th>Base Price</th>\r\n//             <th>Discounted Price</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {products.map(product => (\r\n//             <tr key={product.product_id}>\r\n//               <td>{product.product_id}</td>\r\n//               <td>{product.model_id}</td>\r\n//               <td>{product.base_price}</td>\r\n//               <td>{product.discounted_price}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       <div>\r\n//         <label>Select Category:</label>\r\n//         <select value={selectedCategory} onChange={handleCategoryChange}>\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map(category => (\r\n//             <option key={category.id} value={category.id}>{category.name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>Select Brand:</label>\r\n//         <select value={selectedBrand} onChange={handleBrandChange}>\r\n//           <option value=\"\">Select Brand</option>\r\n//           {brands.map(brand => (\r\n//             <option key={brand.id} value={brand.id}>{brand.name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>Select Model:</label>\r\n//         <select value={selectedModel} onChange={handleModelChange}>\r\n//           <option value=\"\">Select Model</option>\r\n//           {models.map(model => (\r\n//             <option key={model.id} value={model.id}>{model.name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>Discount Value:</label>\r\n//         <input type=\"text\" value={discountValue} onChange={handleDiscountValueChange} />\r\n//       </div>\r\n\r\n//       <button onClick={handleSetDiscount}>Set New Discounted Value</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UpdateDiscountedPricePage;\r\n\r\n////////////////////////////////////////\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import './UpdateDiscountedPrice.css';\r\n\r\n\r\n// const UpdateDiscountedPricePage = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [brands, setBrands] = useState([]);\r\n//   const [models, setModels] = useState([]);\r\n//   const [products, setProducts] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState('');\r\n//   const [selectedBrand, setSelectedBrand] = useState('');\r\n//   const [selectedModel, setSelectedModel] = useState(0);\r\n//   const [discountValue, setDiscountValue] = useState('');\r\n//   const [selectedProductId, setSelectedProductId] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch categories on component mount\r\n//     fetch('http://localhost:8080/getAllCategories')\r\n//       .then(response => response.json())\r\n//       .then(data => setCategories(data))\r\n//       .catch(error => console.error('Error fetching categories:', error));\r\n\r\n//       fetch('http://localhost:8080/getAllBrands')\r\n//       .then(response => response.json())\r\n//       .then(data => setBrands(data))\r\n//       .catch(error => console.error('Error fetching brands:', error));\r\n//   }, []);\r\n\r\n//   const handleCategoryChange = (event) => {\r\n//     const selectedCategoryId = event.target.value;\r\n//     setSelectedCategory(selectedCategoryId);\r\n//   };\r\n\r\n//   /*useEffect(() => {\r\n//     // Fetch all brands\r\n//     fetch('http://localhost:8080/getAllBrands')\r\n//       .then(response => response.json())\r\n//       .then(data => setBrands(data))\r\n//       .catch(error => console.error('Error fetching brands:', error));\r\n//   }, [selectedCategory]); */\r\n\r\n//   const handleBrandChange = (event) => {\r\n//     const selectedBrandId = event.target.value;\r\n//     setSelectedBrand(selectedBrandId);\r\n\r\n//     // Fetch models based on selected brand\r\n//     fetch(`http://localhost:8080/getModels?categoryid=${selectedCategory}&brandid=${selectedBrandId}`)\r\n//       .then(response => response.json())\r\n//       .then(data => setModels(data))\r\n//       .catch(error => console.error('Error fetching models:', error));\r\n//   };\r\n\r\n//   // const handleModelChange = (event) => {\r\n//   //   const selectedModelId = event.target.value;\r\n//   //   setSelectedModel(selectedModelId);\r\n\r\n//   //   // Fetch products based on selected model\r\n//   //   fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\r\n//   //     .then(response => response.json())\r\n//   //     .then(data => setProducts(data))\r\n//   //     .catch(error => console.error('Error fetching products:', error));\r\n//   // };\r\n//   const handleModelChange = (event) => {\r\n//   const selectedModelId = event.target.value;\r\n//   setSelectedModel(selectedModelId);\r\n\r\n//   // Fetch products based on selected model\r\n//   fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\r\n//     .then(response => response.json())\r\n//     .then(data => setProducts(data))\r\n//     .catch(error => console.error('Error fetching products:', error));\r\n\r\n//   // Reset models state to an empty array to avoid \"map is not a function\" error\r\n//   //setModels([]);\r\n// };\r\n\r\n\r\n//   const handleDiscountValueChange = (event) => {\r\n//     setDiscountValue(event.target.value);\r\n//   };\r\n\r\n//   const handleSetDiscount = () => {\r\n//     // Assuming 'pid' is the product id and 'dp' is the discounted price\r\n//     const requestBody = {\r\n//       pid: selectedProductId,\r\n//       dp: discountValue\r\n//     };\r\n\r\n//     // Update discounted price on the backend\r\n//     fetch('http://localhost:8080/updateDiscountedPrice', {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         // Add any additional headers if needed\r\n//       },\r\n//       body: JSON.stringify({\r\n//          mid: selectedModel,\r\n//          sid:  ,\r\n//       dp: discountValue\r\n//       }),\r\n//     })\r\n//       .then(response => {\r\n//         if (response.ok) {\r\n//           console.log('Discounted price updated successfully');\r\n//         } else {\r\n//           console.error('Failed to update discounted price');\r\n//         }\r\n//       })\r\n//       .catch(error => console.error('Error updating discounted price:', error));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Product ID</th>\r\n//             <th>Model ID</th>\r\n//             <th>Base Price</th>\r\n//             <th>Discounted Price</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {products.map(product => (\r\n//             <tr key={product.product_id}>\r\n//               <td>{product.product_id}</td>\r\n//               <td>{product.model_id}</td>\r\n//               <td>{product.base_price}</td>\r\n//               <td>{product.discounted_price}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table> */}\r\n\r\n// <div className=\"form-group\">\r\n//         <label>Select Category:</label>\r\n//         <select className=\"form-control\" value={selectedCategory} onChange={handleCategoryChange}>\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map(category => (\r\n//             <option key={category.categoryId} value={category.categoryId}>{category.category_Name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div className=\"form-group\">\r\n//         <label>Select Brand:</label>\r\n//         <select className=\"form-control\" value={selectedBrand} onChange={handleBrandChange}>\r\n//           <option value=\"\">Select Brand</option>\r\n//           {brands.map(brand => (\r\n//             <option key={brand.brand_id} value={brand.brand_id}>{brand.brand_name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div className=\"form-group\">\r\n//         <label>Select Model:</label>\r\n//         <select className=\"form-control\" value={selectedModel} onChange={handleModelChange}>\r\n//           <option value=\"\">Select Model</option>\r\n//           {models.map(model => (\r\n//             <option key={model.model_Id} value={model.model_Id}>{model.model_Name}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Product ID</th>\r\n//             <th>Model ID</th>\r\n//             <th>Base Price</th>\r\n//             <th>Discounted Price</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {products.map(product => (\r\n//             <tr key={product.product_id}>\r\n//               <td>{product.product_id}</td>\r\n//               <td>{product.model_id}</td>\r\n//               <td>{product.base_price}</td>\r\n//               <td>{product.discounted_price}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       <div>\r\n//         <label>Discount Value:</label>\r\n//         <input type=\"text\" value={discountValue} onChange={handleDiscountValueChange} />\r\n//       </div>\r\n\r\n//       <button onClick={handleSetDiscount}>Set New Discounted Value</button>\r\n\r\n//       <p> {JSON.stringify(models)}</p>\r\n      \r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UpdateDiscountedPricePage;\r\n\r\n\r\n//23-02-2024 at 11:02\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../CSS Files/UpdateDiscountedPrice.css';\r\n\r\nconst UpdateDiscountedPricePage = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [brands, setBrands] = useState([]);\r\n  const [models, setModels] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [selectedBrand, setSelectedBrand] = useState('');\r\n  const [selectedModel, setSelectedModel] = useState('');\r\n  const [discountValue, setDiscountValue] = useState('');\r\n  const [selectedProductId, setSelectedProductId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch categories on component mount\r\n    fetch('http://localhost:8080/getAllCategories')\r\n      .then(response => response.json())\r\n      .then(data => setCategories(data))\r\n      .catch(error => console.error('Error fetching categories:', error));\r\n\r\n    // Fetch all brands\r\n    fetch('http://localhost:8080/getAllBrands')\r\n      .then(response => response.json())\r\n      .then(data => setBrands(data))\r\n      .catch(error => console.error('Error fetching brands:', error));\r\n  }, []);\r\n\r\n  const handleCategoryChange = (event) => {\r\n    const selectedCategoryId = event.target.value;\r\n    setSelectedCategory(selectedCategoryId);\r\n  };\r\n\r\n  const handleBrandChange = (event) => {\r\n    const selectedBrandId = event.target.value;\r\n    setSelectedBrand(selectedBrandId);\r\n\r\n    // Fetch models based on selected brand\r\n    fetch(`http://localhost:8080/getModels?categoryid=${selectedCategory}&brandid=${selectedBrandId}`)\r\n      .then(response => response.json())\r\n      .then(data => setModels(data))\r\n      .catch(error => console.error('Error fetching models:', error));\r\n  };\r\n\r\n  const handleModelChange = (event) => {\r\n    const selectedModelId = event.target.value;\r\n    setSelectedModel(selectedModelId);\r\n\r\n    // Fetch products based on selected model\r\n    fetch(`http://localhost:8080/getProducts?id=${selectedModelId}`)\r\n      .then(response => response.json())\r\n      .then(data => setProducts(data))\r\n      .catch(error => console.error('Error fetching products:', error));\r\n  };\r\n\r\n  const handleDiscountValueChange = (event) => {\r\n    setDiscountValue(event.target.value);\r\n  };\r\n\r\n  const handleSetDiscount = () => {\r\n    // Assuming 'pid' is the product id and 'dp' is the discounted price\r\n    const requestBody = {\r\n      pid: selectedProductId,\r\n      dp: discountValue\r\n    };\r\n\r\n    // Update discounted price on the backend\r\n    fetch('http://localhost:8080/updateDiscountedPrice', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add any additional headers if needed\r\n      },\r\n      body: JSON.stringify({\r\n        mid: selectedModel,\r\n        sid: selectedProductId,\r\n        dp: discountValue\r\n      }),\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log('Discounted price updated successfully');\r\n        } else {\r\n          console.error('Failed to update discounted price');\r\n        }\r\n      })\r\n      .catch(error => console.error('Error updating discounted price:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label>Select Category:</label>\r\n        <select className=\"form-control\" value={selectedCategory} onChange={handleCategoryChange}>\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map(category => (\r\n            <option key={category.categoryId} value={category.categoryId}>{category.category_Name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Select Brand:</label>\r\n        <select className=\"form-control\" value={selectedBrand} onChange={handleBrandChange}>\r\n          <option value=\"\">Select Brand</option>\r\n          {brands.map(brand => (\r\n            <option key={brand.brand_id} value={brand.brand_id}>{brand.brand_name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Select Model:</label>\r\n        <select className=\"form-control\" value={selectedModel} onChange={handleModelChange}>\r\n          <option value=\"\">Select Model</option>\r\n          {models.map(model => (\r\n            <option key={model.model_Id} value={model.model_Id}>{model.model_Name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product ID</th>\r\n            <th>Model ID</th>\r\n            <th>Base Price</th>\r\n            <th>Discounted Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map(product => (\r\n            <tr key={product.product_id}>\r\n              <td>{product.product_id}</td>\r\n              <td>{product.model_id}</td>\r\n              <td>{product.base_price}</td>\r\n              <td>{product.discounted_price}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div>\r\n        <label>Discount Value:</label>\r\n        <input type=\"text\" value={discountValue} onChange={handleDiscountValueChange} />\r\n      </div>\r\n\r\n      <button onClick={handleSetDiscount}>Set New Discounted Value</button>\r\n\r\n      <p> {JSON.stringify(models)}</p>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateDiscountedPricePage;\r\n"],"mappings":";;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}