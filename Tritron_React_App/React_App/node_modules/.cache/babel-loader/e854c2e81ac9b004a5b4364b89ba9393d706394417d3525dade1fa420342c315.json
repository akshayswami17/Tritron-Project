{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const ViewProducts = () => {\n//   const navigate = useNavigate();\n//   const [models, setModels] = useState([]);\n//   const [searchCriteria, setSearchCriteria] = useState('category');\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   const handleShow = (id) => {\n//     console.log(\"Show clicked for product with ID:\" + id);\n//     fetch(`http://localhost:8080/getProducts?id=${id}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Data:\", data);\n//         localStorage.setItem(\"searchedProducts\", JSON.stringify(data));\n//         navigate(\"../showProducts\");\n//       })\n//       .catch((error) =>\n//         console.error(\"Error fetching data before show:\", error)\n//       );\n//   };\n\n//   const handleSearch = () => {\n//     console.log(`Searching by ${searchCriteria}: ${searchTerm}`);\n//     // Add search functionality here if needed\n//   };\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8080/getAllModels')\n//       .then(response => {\n//         setModels(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching product data:', error);\n//       });\n//   }, []);\n\n//   return (\n//     <div className=\"container mt-4 rounded-4\">\n//       <h2 className=\"mb-4\" style={{ color: '#007BFF' }}>Products</h2>\n\n//       <table className=\"table table-striped table-hover\">\n//         <thead>\n//           <tr>\n//             {/* <th>Product ID</th> */}\n//             <th>Model Name</th>\n//             <th>Base Price</th>\n//             <th>Brand</th>\n//             <th>Description</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {models.map((modelss) => (\n//             <tr key={modelss.model_id}>\n//               {/* <td>{model.model_id}</td> */}\n//               <td>{modelss.modelName}</td>\n//               <td>{modelss.basePrice}</td>\n//               <td>{modelss.brand ? modelss.brand.brand_name : 'ERROR'}</td>\n//               <td>{modelss.description}</td>\n//               <td>\n//                 <button className=\"btn-viewProduct\" onClick={() => handleShow(modelss.model_id)}>\n//                   Buy now\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ViewProducts;\n\n// 28-05-2024 at 11:03pm","map":{"version":3,"names":[],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/ViewProducts.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const ViewProducts = () => {\r\n//   const navigate = useNavigate();\r\n//   const [models, setModels] = useState([]);\r\n//   const [searchCriteria, setSearchCriteria] = useState('category');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   const handleShow = (id) => {\r\n//     console.log(\"Show clicked for product with ID:\" + id);\r\n//     fetch(`http://localhost:8080/getProducts?id=${id}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log(\"Data:\", data);\r\n//         localStorage.setItem(\"searchedProducts\", JSON.stringify(data));\r\n//         navigate(\"../showProducts\");\r\n//       })\r\n//       .catch((error) =>\r\n//         console.error(\"Error fetching data before show:\", error)\r\n//       );\r\n//   };\r\n\r\n//   const handleSearch = () => {\r\n//     console.log(`Searching by ${searchCriteria}: ${searchTerm}`);\r\n//     // Add search functionality here if needed\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:8080/getAllModels')\r\n//       .then(response => {\r\n//         setModels(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error fetching product data:', error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"container mt-4 rounded-4\">\r\n//       <h2 className=\"mb-4\" style={{ color: '#007BFF' }}>Products</h2>\r\n\r\n//       <table className=\"table table-striped table-hover\">\r\n//         <thead>\r\n//           <tr>\r\n//             {/* <th>Product ID</th> */}\r\n//             <th>Model Name</th>\r\n//             <th>Base Price</th>\r\n//             <th>Brand</th>\r\n//             <th>Description</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {models.map((modelss) => (\r\n//             <tr key={modelss.model_id}>\r\n//               {/* <td>{model.model_id}</td> */}\r\n//               <td>{modelss.modelName}</td>\r\n//               <td>{modelss.basePrice}</td>\r\n//               <td>{modelss.brand ? modelss.brand.brand_name : 'ERROR'}</td>\r\n//               <td>{modelss.description}</td>\r\n//               <td>\r\n//                 <button className=\"btn-viewProduct\" onClick={() => handleShow(modelss.model_id)}>\r\n//                   Buy now\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewProducts;\r\n\r\n\r\n\r\n\r\n// 28-05-2024 at 11:03pm"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA"},"metadata":{},"sourceType":"module","externalDependencies":[]}