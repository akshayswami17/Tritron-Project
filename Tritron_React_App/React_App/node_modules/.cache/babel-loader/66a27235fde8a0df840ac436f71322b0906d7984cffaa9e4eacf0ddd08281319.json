{"ast":null,"code":"var _jsxFileName = \"A:\\\\Tritron Project\\\\Tritron_React_App\\\\React_App\\\\src\\\\components\\\\AddBrand.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from 'react';\nimport '../CSS Files/AddBrand.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBrandForm = () => {\n  _s();\n  const init = {\n    brand_name: \"\"\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'update':\n        return {\n          ...state,\n          [action.field]: action.value\n        };\n      case 'reset':\n        return init;\n      default:\n        return state;\n    }\n  };\n  const [brand, dispatch] = useReducer(reducer, init);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [successMsg, setSuccessMsg] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!brand.brand_name) {\n      setErrorMsg('Brand name is required');\n      return;\n    }\n    fetch(\"http://localhost:8080/addBrand\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(brand)\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setSuccessMsg('Brand added successfully!');\n        dispatch({\n          type: 'reset'\n        });\n      } else {\n        setErrorMsg('Failed to add brand');\n      }\n    }).catch(error => {\n      console.error('Error adding brand:', error);\n      setErrorMsg('Error adding brand');\n    });\n  };\n  const handleClear = () => {\n    dispatch({\n      type: 'reset'\n    });\n    setErrorMsg('');\n    setSuccessMsg('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-brand-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"add-brand-heading\",\n      children: \"Add Brand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"brand_name\",\n          className: \"form-label\",\n          children: \"Brand Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"brand_name\",\n          name: \"brand_name\",\n          value: brand.brand_name,\n          onChange: e => dispatch({\n            type: 'update',\n            field: 'brand_name',\n            value: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          style: {\n            color: 'red'\n          },\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this), successMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-msg\",\n          style: {\n            color: 'green'\n          },\n          children: successMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: handleClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBrandForm, \"I4Rvs0fAMJx5Z5ZY14flEBJbRmY=\");\n_c = AddBrandForm;\nexport default AddBrandForm;\nvar _c;\n$RefreshReg$(_c, \"AddBrandForm\");","map":{"version":3,"names":["React","useReducer","useState","jsxDEV","_jsxDEV","AddBrandForm","_s","init","brand_name","reducer","state","action","type","field","value","brand","dispatch","errorMsg","setErrorMsg","successMsg","setSuccessMsg","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","catch","error","console","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","onChange","target","required","style","color","onClick","_c","$RefreshReg$"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/AddBrand.js"],"sourcesContent":["import React, { useReducer, useState } from 'react';\r\nimport '../CSS Files/AddBrand.css';\r\n\r\nconst AddBrandForm = () => {\r\n  const init = {\r\n    brand_name: \"\"\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'update':\r\n        return { ...state, [action.field]: action.value };\r\n      case 'reset':\r\n        return init;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [brand, dispatch] = useReducer(reducer, init);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [successMsg, setSuccessMsg] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!brand.brand_name) {\r\n      setErrorMsg('Brand name is required');\r\n      return;\r\n    }\r\n\r\n    fetch(\"http://localhost:8080/addBrand\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(brand),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setSuccessMsg('Brand added successfully!');\r\n          dispatch({ type: 'reset' });\r\n        } else {\r\n            setErrorMsg('Failed to add brand');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error adding brand:', error);\r\n        setErrorMsg('Error adding brand');\r\n      });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    dispatch({ type: 'reset' });\r\n    setErrorMsg('');\r\n    setSuccessMsg('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-brand-container\">\r\n      <h1 className='add-brand-heading'>Add Brand</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"brand_name\" className=\"form-label\">Brand Name:</label>\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            id=\"brand_name\" \r\n            name=\"brand_name\"\r\n            value={brand.brand_name}\r\n            onChange={(e) => dispatch({ type: 'update', field: 'brand_name', value: e.target.value })}\r\n            required\r\n          />\r\n          {errorMsg && <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsg}</div>}\r\n          {successMsg && <div className=\"success-msg\" style={{ color: 'green' }}>{successMsg}</div>}\r\n        </div>\r\n        <div className=\"form-actions\">\r\n            \r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClear}>Clear</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBrandForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}