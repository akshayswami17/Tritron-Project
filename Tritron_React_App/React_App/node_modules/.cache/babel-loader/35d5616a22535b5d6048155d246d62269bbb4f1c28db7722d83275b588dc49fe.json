{"ast":null,"code":"var _jsxFileName = \"A:\\\\Tritron Project\\\\Tritron_React_App\\\\React_App\\\\src\\\\components\\\\FeedbackForm.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n\n// // const FeedbackForm = () => {\n// //   const [formData, setFormData] = useState({\n// //     name: '',\n// //     email: '',\n// //     feedback: '',\n// //   });\n\n// //   const handleChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setFormData({\n// //       ...formData,\n// //       [name]: value,\n// //     });\n// //   };\n\n// //   const handleSubmit = (e) => {\n// //     e.preventDefault();\n\n// //     fetch('http://localhost:8080/submitFeedback', {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json',\n// //       },\n// //       body: JSON.stringify(formData),\n// //     })\n// //       .then(response => response.json())\n// //       .then(data => {\n// //         console.log('Feedback submitted successfully:', data);\n// //         // You can add further logic here, such as showing a success message.\n// //       })\n// //       .catch(error => console.error('Error submitting feedback:', error));\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Feedback Form</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <div>\n// //           <label htmlFor=\"name\">Name:</label>\n// //           <input\n// //             type=\"text\"\n// //             id=\"name\"\n// //             name=\"name\"\n// //             value={formData.name}\n// //             onChange={handleChange}\n// //             required\n// //           />\n// //         </div>\n// //         <div>\n// //           <label htmlFor=\"email\">Email:</label>\n// //           <input\n// //             type=\"email\"\n// //             id=\"email\"\n// //             name=\"email\"\n// //             value={formData.email}\n// //             onChange={handleChange}\n// //             required\n// //           />\n// //         </div>\n// //         <div>\n// //           <label htmlFor=\"feedback\">Feedback:</label>\n// //           <textarea\n// //             id=\"feedback\"\n// //             name=\"feedback\"\n// //             value={formData.feedback}\n// //             onChange={handleChange}\n// //             required\n// //           />\n// //         </div>\n// //         <button type=\"submit\">Submit Feedback</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default FeedbackForm;\n\n// // FeedbackForm.css\n// /* Add your custom styles here */\n\n// // FeedbackForm.js\n// import React, { useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n// import './FeedbackForm.css'; // Import custom CSS\n\n// const FeedbackForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     feedback: '',\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     fetch('http://localhost:8080/submitFeedback', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(formData),\n//     })\n//       .then(response => response.json())\n//       .then(data => {\n//         console.log('Feedback submitted successfully:', data);\n//         // You can add further logic here, such as showing a success message.\n//       })\n//       .catch(error => console.error('Error submitting feedback:', error));\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"mb-4\">Feedback Form</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"name\" className=\"form-label\">Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//             className=\"form-control\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"email\" className=\"form-label\">Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             className=\"form-control\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"feedback\" className=\"form-label\">Feedback:</label>\n//           <textarea\n//             id=\"feedback\"\n//             name=\"feedback\"\n//             value={formData.feedback}\n//             onChange={handleChange}\n//             className=\"form-control\"\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Submit Feedback</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default FeedbackForm;\n\n// FeedbackForm.js\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport './FeedbackForm.css'; // Import custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    ratings: '',\n    comments: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:8080/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log('Feedback submitted successfully:', data);\n      // You can add further logic here, such as showing a success message.\n    }).catch(error => console.error('Error submitting feedback:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Feedback Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ratings\",\n          className: \"form-label\",\n          children: \"Ratings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"ratings\",\n          name: \"ratings\",\n          value: formData.ratings,\n          onChange: handleChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comments\",\n          className: \"form-label\",\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comments\",\n          name: \"comments\",\n          value: formData.comments,\n          onChange: handleChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackForm, \"TdimN1628vwcqWvS6JDXCyuJH+4=\");\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FeedbackForm","_s","formData","setFormData","ratings","comments","handleChange","e","name","value","target","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/FeedbackForm.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n\r\n// // const FeedbackForm = () => {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: '',\r\n// //     email: '',\r\n// //     feedback: '',\r\n// //   });\r\n\r\n// //   const handleChange = (e) => {\r\n// //     const { name, value } = e.target;\r\n// //     setFormData({\r\n// //       ...formData,\r\n// //       [name]: value,\r\n// //     });\r\n// //   };\r\n\r\n// //   const handleSubmit = (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     fetch('http://localhost:8080/submitFeedback', {\r\n// //       method: 'POST',\r\n// //       headers: {\r\n// //         'Content-Type': 'application/json',\r\n// //       },\r\n// //       body: JSON.stringify(formData),\r\n// //     })\r\n// //       .then(response => response.json())\r\n// //       .then(data => {\r\n// //         console.log('Feedback submitted successfully:', data);\r\n// //         // You can add further logic here, such as showing a success message.\r\n// //       })\r\n// //       .catch(error => console.error('Error submitting feedback:', error));\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Feedback Form</h2>\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <div>\r\n// //           <label htmlFor=\"name\">Name:</label>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             id=\"name\"\r\n// //             name=\"name\"\r\n// //             value={formData.name}\r\n// //             onChange={handleChange}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div>\r\n// //           <label htmlFor=\"email\">Email:</label>\r\n// //           <input\r\n// //             type=\"email\"\r\n// //             id=\"email\"\r\n// //             name=\"email\"\r\n// //             value={formData.email}\r\n// //             onChange={handleChange}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <div>\r\n// //           <label htmlFor=\"feedback\">Feedback:</label>\r\n// //           <textarea\r\n// //             id=\"feedback\"\r\n// //             name=\"feedback\"\r\n// //             value={formData.feedback}\r\n// //             onChange={handleChange}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n// //         <button type=\"submit\">Submit Feedback</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default FeedbackForm;\r\n\r\n\r\n\r\n// // FeedbackForm.css\r\n// /* Add your custom styles here */\r\n\r\n// // FeedbackForm.js\r\n// import React, { useState } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\r\n// import './FeedbackForm.css'; // Import custom CSS\r\n\r\n// const FeedbackForm = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     feedback: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     fetch('http://localhost:8080/submitFeedback', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(formData),\r\n//     })\r\n//       .then(response => response.json())\r\n//       .then(data => {\r\n//         console.log('Feedback submitted successfully:', data);\r\n//         // You can add further logic here, such as showing a success message.\r\n//       })\r\n//       .catch(error => console.error('Error submitting feedback:', error));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"mb-4\">Feedback Form</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Name:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             name=\"name\"\r\n//             value={formData.name}\r\n//             onChange={handleChange}\r\n//             className=\"form-control\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             className=\"form-control\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"feedback\" className=\"form-label\">Feedback:</label>\r\n//           <textarea\r\n//             id=\"feedback\"\r\n//             name=\"feedback\"\r\n//             value={formData.feedback}\r\n//             onChange={handleChange}\r\n//             className=\"form-control\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary\">Submit Feedback</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FeedbackForm;\r\n\r\n\r\n\r\n\r\n// FeedbackForm.js\r\nimport React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\r\nimport './FeedbackForm.css'; // Import custom CSS\r\n\r\nconst FeedbackForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    ratings: '',\r\n    comments: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch('http://localhost:8080/submit', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Feedback submitted successfully:', data);\r\n        // You can add further logic here, such as showing a success message.\r\n      })\r\n      .catch(error => console.error('Error submitting feedback:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"mb-4\">Feedback Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"ratings\" className=\"form-label\">Ratings:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"ratings\"\r\n            name=\"ratings\"\r\n            value={formData.ratings}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"comments\" className=\"form-label\">Comments:</label>\r\n          <textarea\r\n            id=\"comments\"\r\n            name=\"comments\"\r\n            value={formData.comments}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit Feedback</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC,CAAC,CAAC;AAC/C,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACM,IAAI,GAAGC;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}