{"ast":null,"code":"\n\n//01-06-2024\n\n// import React, { useReducer, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\n// import { login } from './slice';\n// import '../CSS Files/LoginComp.css';\n\n// export default function LoginComp() {\n//   const initialState = {\n//     username: \"\",\n//     password: \"\"\n//   };\n//   // Example login function\n// const handleLogin = (userId) => {\n//   // Assuming userId is obtained after a successful login\n//   localStorage.setItem('userId', userId);\n// };\n\n//   const reducer = (state, action) => {\n//     switch (action.type) {\n//       case 'update':\n//         return { ...state, [action.field]: action.value };\n//       case 'reset':\n//         return initialState;\n//       default:\n//         return state;\n//     }\n//   };\n\n//   const [formData, dispatch] = useReducer(reducer, initialState);\n//   const [errorMsg, setErrorMsg] = useState(\"\");\n//   const navigate = useNavigate();\n//   const reduxDispatch = useDispatch();\n\n//   const handleChange = (e, field) => {\n//     dispatch({ type: 'update', field, value: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:8080/checkUser\", {\n//         method: 'POST',\n//         headers: { 'content-type': 'application/json' },\n//         body: JSON.stringify({\n//           username: formData.username,\n//           password: formData.password\n//         })\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Server Error\");\n//       }\n\n//       const data = await response.json();\n//       if (data === null) {\n//         setErrorMsg(\"Wrong Username/Password\");\n//       } else {\n//         reduxDispatch(login(data)); // Dispatch login action with user data\n//         if (!data.activation_status) {\n//           alert(\"Request has not been approved\");\n//         } else {\n//           switch (data.role.role_id) {\n//             case 1:\n//               navigate(\"/admin_home\");\n//               break;\n//             case 2:\n//               navigate(\"/consumer_home\");\n//               break;\n//             case 3:\n//               navigate(\"/seller_home\");\n//               break;\n//             default:\n//               break;\n//           }\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"Error: \" + error.message);\n//     }\n//   };\n\n//   const handleClear = () => {\n//     dispatch({ type: 'reset' });\n//     setErrorMsg(\"\");\n//   };\n\n//   return (\n//     <div className='login-container'>\n//       <h1 className='login-heading'>LOGIN</h1>\n//       <form className=\"my-4\" onSubmit={handleSubmit}>\n//         <div className=\"mb-3 row\">\n//           <label htmlFor=\"username\" className=\"col-sm-3 col-form-label\">\n//             Username:\n//           </label>\n//           <div className=\"col-sm-8\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control form-control-sm\"\n//               id=\"username\"\n//               name=\"username\"\n//               value={formData.username}\n//               onChange={(e) => handleChange(e, 'username')}\n//             />\n//           </div>\n//         </div>\n//         <div className=\"mb-3 row\">\n//           <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\">\n//             Password:\n//           </label>\n//           <div className=\"col-sm-8\">\n//             <input\n//               type=\"password\"\n//               className=\"form-control form-control-sm\"\n//               id=\"password\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={(e) => handleChange(e, 'password')}\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"form-row\">\n//           <button type=\"submit\" className=\"btn btn-outline-primary me-2\">Submit</button>\n//           <button type=\"button\" className=\"btn btn-outline-danger\" onClick={handleClear}>Clear</button>\n//         </div>\n//       </form>\n//       {errorMsg && <p className=\"error-message\">{errorMsg}</p>}\n//     </div>\n//   );\n// }\n\n//","map":{"version":3,"names":[],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/LoginComp.js"],"sourcesContent":["\r\n\r\n\r\n//01-06-2024\r\n\r\n// import React, { useReducer, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatch } from 'react-redux';\r\n// import { login } from './slice';\r\n// import '../CSS Files/LoginComp.css';\r\n\r\n// export default function LoginComp() {\r\n//   const initialState = {\r\n//     username: \"\",\r\n//     password: \"\"\r\n//   };\r\n//   // Example login function\r\n// const handleLogin = (userId) => {\r\n//   // Assuming userId is obtained after a successful login\r\n//   localStorage.setItem('userId', userId);\r\n// };\r\n\r\n\r\n//   const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//       case 'update':\r\n//         return { ...state, [action.field]: action.value };\r\n//       case 'reset':\r\n//         return initialState;\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   };\r\n\r\n//   const [formData, dispatch] = useReducer(reducer, initialState);\r\n//   const [errorMsg, setErrorMsg] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const reduxDispatch = useDispatch();\r\n\r\n//   const handleChange = (e, field) => {\r\n//     dispatch({ type: 'update', field, value: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8080/checkUser\", {\r\n//         method: 'POST',\r\n//         headers: { 'content-type': 'application/json' },\r\n//         body: JSON.stringify({\r\n//           username: formData.username,\r\n//           password: formData.password\r\n//         })\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Server Error\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       if (data === null) {\r\n//         setErrorMsg(\"Wrong Username/Password\");\r\n//       } else {\r\n//         reduxDispatch(login(data)); // Dispatch login action with user data\r\n//         if (!data.activation_status) {\r\n//           alert(\"Request has not been approved\");\r\n//         } else {\r\n//           switch (data.role.role_id) {\r\n//             case 1:\r\n//               navigate(\"/admin_home\");\r\n//               break;\r\n//             case 2:\r\n//               navigate(\"/consumer_home\");\r\n//               break;\r\n//             case 3:\r\n//               navigate(\"/seller_home\");\r\n//               break;\r\n//             default:\r\n//               break;\r\n//           }\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"Error: \" + error.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleClear = () => {\r\n//     dispatch({ type: 'reset' });\r\n//     setErrorMsg(\"\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className='login-container'>\r\n//       <h1 className='login-heading'>LOGIN</h1>\r\n//       <form className=\"my-4\" onSubmit={handleSubmit}>\r\n//         <div className=\"mb-3 row\">\r\n//           <label htmlFor=\"username\" className=\"col-sm-3 col-form-label\">\r\n//             Username:\r\n//           </label>\r\n//           <div className=\"col-sm-8\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control form-control-sm\"\r\n//               id=\"username\"\r\n//               name=\"username\"\r\n//               value={formData.username}\r\n//               onChange={(e) => handleChange(e, 'username')}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"mb-3 row\">\r\n//           <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\">\r\n//             Password:\r\n//           </label>\r\n//           <div className=\"col-sm-8\">\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"form-control form-control-sm\"\r\n//               id=\"password\"\r\n//               name=\"password\"\r\n//               value={formData.password}\r\n//               onChange={(e) => handleChange(e, 'password')}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n        \r\n//         <div className=\"form-row\">\r\n//           <button type=\"submit\" className=\"btn btn-outline-primary me-2\">Submit</button>\r\n//           <button type=\"button\" className=\"btn btn-outline-danger\" onClick={handleClear}>Clear</button>\r\n//         </div>\r\n//       </form>\r\n//       {errorMsg && <p className=\"error-message\">{errorMsg}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n//"],"mappings":";;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}