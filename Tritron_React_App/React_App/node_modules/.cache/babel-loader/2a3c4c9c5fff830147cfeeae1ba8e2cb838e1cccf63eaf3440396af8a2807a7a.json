{"ast":null,"code":"var _jsxFileName = \"A:\\\\Tritron Project\\\\Tritron_React_App\\\\React_App\\\\src\\\\components\\\\ConsumerReg.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../CSS Files/FeedbackForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedbackForm() {\n  _s();\n  const init = {\n    username: \"\",\n    ratings: \"\",\n    comments: \"\"\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'update':\n        return {\n          ...state,\n          [action.fld]: action.val\n        };\n      case 'reset':\n        return init;\n      default:\n        return state;\n    }\n  };\n  const [feedback, dispatch] = useReducer(reducer, init);\n  const [errorMsgs, setErrorMsgs] = useState(init);\n  const navigate = useNavigate();\n  const sendFeedback = e => {\n    e.preventDefault();\n    const requiredFields = ['username', 'ratings', 'comments'];\n    const newErrorMsgs = {\n      ...errorMsgs\n    };\n    for (const field of requiredFields) {\n      newErrorMsgs[field] = \"\";\n    }\n    for (const field of requiredFields) {\n      if (!feedback[field]) {\n        newErrorMsgs[field] = \"This field is required\";\n      }\n    }\n\n    // Check if any error messages exist\n    for (const field of requiredFields) {\n      if (newErrorMsgs[field]) {\n        setErrorMsgs(newErrorMsgs);\n        return;\n      }\n    }\n\n    // Send feedback data to the server\n    const reqOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(feedback)\n    };\n    fetch(\"http://localhost:8080/feedbackform\", reqOptions).then(resp => {\n      if (resp.ok) {\n        console.log(resp.status);\n        return resp.json();\n      } else {\n        throw new Error(\"Server error\");\n      }\n    }).then(data => {\n      alert(\"Feedback submitted successfully!\");\n      navigate('/'); // Navigate to home page after successful submission\n    }).catch(error => {\n      console.error(\"Error submitting feedback:\", error);\n    });\n  };\n  //className=\"container mt-5 login-form-container col-6\"\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registraction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"consumer-heading\",\n      children: \" Consumer Registration \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Enter User Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"username\",\n            name: \"username\",\n            value: info.username,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'username',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"[a-zA-Z0-9_-]{3,16}$\",\n            title: \"Username allows alphanumeric characters (both lowercase and uppercase), underscores, and hyphens. Length must be between 3 and 16 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Enter Password :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password\",\n            name: \"password\",\n            value: info.password,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'password',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}$\",\n            title: \"Password should contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first_name\",\n            className: \"form-label\",\n            children: \"Enter First Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"first_name\",\n            name: \"first_name\",\n            value: info.first_name,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'first_name',\n              val: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"last_name\",\n            className: \"form-label\",\n            children: \"Enter Last Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"last_name\",\n            name: \"last_name\",\n            value: info.last_name,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'last_name',\n              val: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Enter User Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            name: \"email\",\n            value: info.email,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'email',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n            title: \"Email should be in proper format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone_no\",\n            className: \"form-label\",\n            children: \"Enter User Phone Number :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            className: \"form-control\",\n            id: \"phone_no\",\n            name: \"phone_no\",\n            value: info.phone_no,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'phone_no',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"[0-9]{10}\",\n            title: \"Phone number should be 10 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.phone_no\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            className: \"form-label\",\n            children: \"Select City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"city\",\n            name: \"city\",\n            value: info.city,\n            onChange: e => getAreas(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city.city_id,\n              children: city.c_name\n            }, city.city_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"area\",\n            className: \"form-label\",\n            children: \"Select Area:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"area\",\n            name: \"area\",\n            value: info.area,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'area',\n              val: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), areas.map(area => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: area.area_id,\n              children: area.area_name\n            }, area.area_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            className: \"form-label\",\n            children: \"Enter User Address :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"address\",\n            name: \"address\",\n            value: info.address,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'address',\n              val: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mb-3\",\n          onClick: e => sendData(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"btn btn-info mb-3\",\n          onClick: () => dispatch({\n            type: 'reset'\n          }),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(FeedbackForm, \"mNjrCTAv/Z/yUf3cywfcNZfkZa0=\", false, function () {\n  return [useNavigate];\n});\n_c = FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["useReducer","useState","useNavigate","jsxDEV","_jsxDEV","FeedbackForm","_s","init","username","ratings","comments","reducer","state","action","type","fld","val","feedback","dispatch","errorMsgs","setErrorMsgs","navigate","sendFeedback","e","preventDefault","requiredFields","newErrorMsgs","field","reqOptions","method","headers","body","JSON","stringify","fetch","then","resp","ok","console","log","status","json","Error","data","alert","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","value","info","onChange","target","required","pattern","title","style","color","password","first_name","last_name","email","phone_no","city","getAreas","cities","map","city_id","c_name","area","areas","area_id","area_name","address","onClick","sendData","_c","$RefreshReg$"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/ConsumerReg.js"],"sourcesContent":["import { useReducer, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../CSS Files/FeedbackForm.css';\r\n\r\nexport default function FeedbackForm() {\r\n    const init = {\r\n        username: \"\",\r\n        ratings: \"\",\r\n        comments: \"\"\r\n    }\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'update':\r\n                return { ...state, [action.fld]: action.val }\r\n            case 'reset':\r\n                return init;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    const [feedback, dispatch] = useReducer(reducer, init);\r\n    const [errorMsgs, setErrorMsgs] = useState(init);\r\n    const navigate = useNavigate();\r\n\r\n    const sendFeedback = (e) => {\r\n        e.preventDefault();\r\n        const requiredFields = ['username', 'ratings', 'comments'];\r\n        const newErrorMsgs = { ...errorMsgs };\r\n\r\n        for (const field of requiredFields) {\r\n            newErrorMsgs[field] = \"\";\r\n        }\r\n\r\n        for (const field of requiredFields) {\r\n            if (!feedback[field]) {\r\n                newErrorMsgs[field] = \"This field is required\";\r\n            }\r\n        }\r\n\r\n        // Check if any error messages exist\r\n        for (const field of requiredFields) {\r\n            if (newErrorMsgs[field]) {\r\n                setErrorMsgs(newErrorMsgs);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Send feedback data to the server\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(feedback)\r\n        };\r\n\r\n        fetch(\"http://localhost:8080/feedbackform\", reqOptions)\r\n            .then(resp => {\r\n                if (resp.ok) {\r\n                    console.log(resp.status);\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"Server error\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                alert(\"Feedback submitted successfully!\");\r\n                navigate('/'); // Navigate to home page after successful submission\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error submitting feedback:\", error);\r\n            });\r\n    }\r\n//className=\"container mt-5 login-form-container col-6\"\r\n    return (\r\n        <div className=\"registraction-container\">\r\n            <h1 className='consumer-heading'> Consumer Registration </h1>\r\n            <form>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">Enter User Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" \r\n                        value={info.username}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'username', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[a-zA-Z0-9_-]{3,16}$\"\r\n                        title=\"Username allows alphanumeric characters (both lowercase and uppercase), underscores, and hyphens. Length must be between 3 and 16 characters.\"\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.username}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Enter Password :</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" \r\n                        value={info.password} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'password', val: e.target.value})}\r\n                        required\r\n                        pattern=\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$\"\r\n                        title=\"Password should contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.password}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"first_name\" className=\"form-label\">Enter First Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"first_name\" name=\"first_name\" \r\n                        value={info.first_name} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'first_name', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.first_name}</div>\r\n                </div>\r\n        </div>\r\n        <div className=\"form-row\">  \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"last_name\" className=\"form-label\">Enter Last Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"last_name\" name=\"last_name\" \r\n                        value={info.last_name} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'last_name', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.last_name}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Enter User Email :</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" \r\n                        value={info.email}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'email', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                        title=\"Email should be in proper format\"\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.email}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"phone_no\" className=\"form-label\">Enter User Phone Number :</label>\r\n                    <input type=\"tel\" className=\"form-control\" id=\"phone_no\" name=\"phone_no\" \r\n                        value={info.phone_no}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'phone_no', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[0-9]{10}\"\r\n                        title=\"Phone number should be 10 digits\"\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.phone_no}</div>\r\n                </div>\r\n\r\n    </div>\r\n    <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"city\" className=\"form-label\">Select City:</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={info.city}\r\n                        onChange={(e) => getAreas(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select City</option>\r\n                        {cities.map(city => (\r\n                            <option key={city.city_id} value={city.city_id}>{city.c_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>       \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"area\" className=\"form-label\">Select Area:</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"area\"\r\n                        name=\"area\"\r\n                        value={info.area}\r\n                        onChange={(e) => dispatch({ type: 'update', fld: 'area', val: e.target.value })}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Area</option>\r\n                        {areas.map((area) => (\r\n                            <option key={area.area_id} value={area.area_id}>\r\n                                {area.area_name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>  \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"address\" className=\"form-label\">Enter User Address :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" \r\n                        value={info.address}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'address', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.address}</div>\r\n                </div>\r\n    </div>  \r\n    <div className=\"form-row\">           \r\n                <button type=\"submit\" className=\"btn btn-primary mb-3\" onClick={(e) => sendData(e)}>Submit</button>\r\n                <button type=\"reset\" className=\"btn btn-info mb-3\" onClick={() => dispatch({type: 'reset'})}>Clear</button>\r\n    </div>\r\n            </form>\r\n            \r\n            {/* <p>{JSON.stringify(info)}</p>\r\n            <p>{msg}</p>  */}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}