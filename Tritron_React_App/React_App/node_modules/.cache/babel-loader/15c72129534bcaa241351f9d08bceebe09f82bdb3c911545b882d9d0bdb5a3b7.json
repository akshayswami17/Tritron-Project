{"ast":null,"code":"var _jsxFileName = \"A:\\\\Tritron Project\\\\Tritron_React_App\\\\React_App\\\\src\\\\components\\\\ViewOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/getAllOrders\").then(response => response.json()).then(data => setOrders(data)).catch(error => console.error('Error fetching orders:', error));\n  }, []);\n\n  // Function to fetch consumer data\n  const fetchConsumerData = async consumerId => {\n    try {\n      const response = await fetch(`http://localhost:8080/getConsumer/${consumerId}`);\n      const data = await response.json();\n      return data.first_name + ' ' + data.last_name;\n    } catch (error) {\n      console.error('Error fetching consumer data:', error);\n      return 'Unknown';\n    }\n  };\n\n  // Function to fetch product data\n  const fetchProductData = async productId => {\n    try {\n      const response = await fetch(`http://localhost:8080/getProduct/${productId}`);\n      const data = await response.json();\n      return data.name;\n    } catch (error) {\n      console.error('Error fetching product data:', error);\n      return 'Unknown';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Consumer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(orders) && orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.order_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: fetchConsumerData(order.consumer_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: fetchProductData(order.product_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.date_of_order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, order.order_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = ViewOrders;\nexport default ViewOrders;\nvar _c;\n$RefreshReg$(_c, \"ViewOrders\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ViewOrders","_s","orders","setOrders","fetch","then","response","json","data","catch","error","console","fetchConsumerData","consumerId","first_name","last_name","fetchProductData","productId","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","order","order_id","consumer_id","product_id","date_of_order","_c","$RefreshReg$"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/ViewOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ViewOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/getAllOrders\")\r\n      .then(response => response.json())\r\n      .then(data => setOrders(data))\r\n      .catch(error => console.error('Error fetching orders:', error));\r\n  }, []);\r\n\r\n  // Function to fetch consumer data\r\n  const fetchConsumerData = async (consumerId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/getConsumer/${consumerId}`);\r\n      const data = await response.json();\r\n      return data.first_name + ' ' + data.last_name;\r\n    } catch (error) {\r\n      console.error('Error fetching consumer data:', error);\r\n      return 'Unknown';\r\n    }\r\n  };\r\n\r\n  // Function to fetch product data\r\n  const fetchProductData = async (productId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/getProduct/${productId}`);\r\n      const data = await response.json();\r\n      return data.name;\r\n    } catch (error) {\r\n      console.error('Error fetching product data:', error);\r\n      return 'Unknown';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>All Orders</h2>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>Order ID</th>\r\n            <th>Consumer Name</th>\r\n            <th>Product Name</th>\r\n            <th>Date of Order</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Array.isArray(orders) && orders.map(order => (\r\n            <tr key={order.order_id}>\r\n              <td>{order.order_id}</td>\r\n              <td>{fetchConsumerData(order.consumer_id)}</td>\r\n              <td>{fetchProductData(order.product_id)}</td>\r\n              <td>{order.date_of_order}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewOrders;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}