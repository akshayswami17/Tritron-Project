{"ast":null,"code":"var _jsxFileName = \"A:\\\\Tritron Project\\\\Tritron_React_App\\\\React_App\\\\src\\\\components\\\\AddBrand.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from 'react';\nimport '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BrandForm() {\n  _s();\n  const init = {\n    brandName: \"\"\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'update':\n        return {\n          ...state,\n          [action.field]: action.value\n        };\n      case 'reset':\n        return init;\n      default:\n        return state;\n    }\n  };\n  const [brand, dispatch] = useReducer(reducer, init);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const sendData = e => {\n    e.preventDefault();\n\n    // Validate brand name\n    if (!brand.brandName) {\n      setErrorMsg(\"Brand name is required\");\n      return;\n    }\n\n    // Send brand data to backend\n    fetch(\"http://localhost:8080/addbrand\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        brandName: brand.brandName\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      setSuccessMessage(\"Brand submitted successfully!\");\n      dispatch({\n        type: 'reset'\n      }); // Clear form\n    }).catch(error => {\n      console.error('Error submitting brand:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brand-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"brand-heading\",\n      children: \"Add Brand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group-brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"brandName\",\n          className: \"form-label\",\n          children: \"Brand Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"brandName\",\n          name: \"brandName\",\n          value: brand.brandName,\n          onChange: e => dispatch({\n            type: 'update',\n            field: 'brandName',\n            value: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          style: {\n            color: 'red'\n          },\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"btn btn-danger mb-3\",\n          onClick: () => dispatch({\n            type: 'reset'\n          }),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mb-3\",\n          onClick: e => sendData(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(BrandForm, \"8tb6UHlt52STvkXNK3i62PtKdtc=\");\n_c = BrandForm;\nvar _c;\n$RefreshReg$(_c, \"BrandForm\");","map":{"version":3,"names":["useReducer","useState","jsxDEV","_jsxDEV","BrandForm","_s","init","brandName","reducer","state","action","type","field","value","brand","dispatch","errorMsg","setErrorMsg","successMessage","setSuccessMessage","sendData","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","onChange","target","required","style","color","onClick","_c","$RefreshReg$"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/AddBrand.js"],"sourcesContent":["import { useReducer, useState } from 'react';\r\nimport '../';\r\n\r\nexport default function BrandForm() {\r\n    const init = {\r\n        brandName: \"\"\r\n    }\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'update':\r\n                return { ...state, [action.field]: action.value }\r\n            case 'reset':\r\n                return init;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    const [brand, dispatch] = useReducer(reducer, init);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n    const sendData = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate brand name\r\n        if (!brand.brandName) {\r\n            setErrorMsg(\"Brand name is required\");\r\n            return;\r\n        }\r\n\r\n        // Send brand data to backend\r\n        fetch(\"http://localhost:8080/addbrand\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ brandName: brand.brandName }),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Success:', data);\r\n            setSuccessMessage(\"Brand submitted successfully!\");\r\n            dispatch({ type: 'reset' }); // Clear form\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error submitting brand:', error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"brand-container\">\r\n            <h1 className='brand-heading'>Add Brand</h1>\r\n            <form>\r\n                <div className=\"form-group-brand\">\r\n                    <label htmlFor=\"brandName\" className=\"form-label\">Brand Name:</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"brandName\" name=\"brandName\"\r\n                        value={brand.brandName}\r\n                        onChange={(e) => dispatch({ type: 'update', field: 'brandName', value: e.target.value })}\r\n                        required\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsg}</div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <button type=\"reset\" className=\"btn btn-danger mb-3\" onClick={() => dispatch({ type: 'reset' })}>Clear</button>\r\n                    <button type=\"submit\" className=\"btn btn-primary mb-3\" onClick={(e) => sendData(e)}>Submit</button>\r\n                    {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}