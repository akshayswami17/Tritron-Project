{"ast":null,"code":"import{useReducer,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'../CSS Files/Registraction.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ConsumerReg(){const init={username:\"\",password:\"\",first_name:\"\",last_name:\"\",email:\"\",phone_no:\"\",area:0,address:\"\"};const reducer=(state,action)=>{switch(action.type){case'update':return{...state,[action.fld]:action.val};case'reset':return init;default:return state;}};const[info,dispatch]=useReducer(reducer,init);const[cities,setCities]=useState([]);const[areas,setAreas]=useState([]);const[msg,setMsg]=useState(\"\");const[errorMsgs,setErrorMsgs]=useState(init);const navigate=useNavigate();useEffect(()=>{fetch(\"http://localhost:8080/getCities\").then(resp=>{if(resp.ok){return resp.json();}else{throw new Error(\"server error\");}}).then(data=>setCities(data)).catch(error=>console.log(error.toString()));},[]);const getAreas=id=>{fetch(\"http://localhost:8080/getAreas?cid=\"+id).then(resp=>{if(resp.ok){return resp.json();}else{throw new Error(\"server error\");}}).then(obj=>setAreas(obj)).catch(error=>console.log(error.toString()));};const sendData=e=>{e.preventDefault();const requiredFields=['username','password','first_name','last_name','email','phone_no','area','address'];const newErrorMsgs={...errorMsgs};// Copy of current error messages\nfor(const field of requiredFields){newErrorMsgs[field]=\"\";}for(const field of requiredFields){if(!info[field]){newErrorMsgs[field]=\"This field is required\";}}// Check if any error messages exist\nfor(const field of requiredFields){if(newErrorMsgs[field]){setErrorMsgs(newErrorMsgs);return;}}const reqOptions={method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify({username:info.username,password:info.password,first_name:info.first_name,last_name:info.last_name,email:info.email,phone_no:info.phone_no,area_id:info.area,address:info.address})};fetch(\"http://localhost:8080/consumerreg\",reqOptions).then(resp=>{if(resp.ok){console.log(resp.status);return resp.json();}else{throw new Error(\"server error\");}}).then(obj=>{alert(\"Registration successful, Try Login\");navigate('/');}).catch(error=>{console.error(error);});};//className=\"container mt-5 login-form-container col-6\"\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"registraction-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"consumer-heading\",children:\" Consumer Registration \"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:\"form-label\",children:\"Enter User Name :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"username\",name:\"username\",value:info.username,onChange:e=>dispatch({type:'update',fld:'username',val:e.target.value}),required:true,pattern:\"[a-zA-Z0-9_-]{3,16}$\",title:\"Username allows alphanumeric characters (both lowercase and uppercase), underscores, and hyphens. Length must be between 3 and 16 characters.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"form-label\",children:\"Enter Password :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"password\",name:\"password\",value:info.password,onChange:e=>dispatch({type:'update',fld:'password',val:e.target.value}),required:true,pattern:\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}$\",title:\"Password should contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.password})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"first_name\",className:\"form-label\",children:\"Enter First Name :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"first_name\",name:\"first_name\",value:info.first_name,onChange:e=>dispatch({type:'update',fld:'first_name',val:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.first_name})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"last_name\",className:\"form-label\",children:\"Enter Last Name :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"last_name\",name:\"last_name\",value:info.last_name,onChange:e=>dispatch({type:'update',fld:'last_name',val:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.last_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"form-label\",children:\"Enter User Email :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",id:\"email\",name:\"email\",value:info.email,onChange:e=>dispatch({type:'update',fld:'email',val:e.target.value}),required:true,pattern:\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",title:\"Email should be in proper format\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone_no\",className:\"form-label\",children:\"Enter User Phone Number :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",className:\"form-control\",id:\"phone_no\",name:\"phone_no\",value:info.phone_no,onChange:e=>dispatch({type:'update',fld:'phone_no',val:e.target.value}),required:true,pattern:\"[0-9]{10}\",title:\"Phone number should be 10 digits\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.phone_no})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",className:\"form-label\",children:\"Select City:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"city\",name:\"city\",value:info.city,onChange:e=>getAreas(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select City\"}),cities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city.city_id,children:city.c_name},city.city_id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"area\",className:\"form-label\",children:\"Select Area:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"area\",name:\"area\",value:info.area,onChange:e=>dispatch({type:'update',fld:'area',val:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Area\"}),areas.map(area=>/*#__PURE__*/_jsx(\"option\",{value:area.area_id,children:area.area_name},area.area_id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",className:\"form-label\",children:\"Enter User Address :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"address\",name:\"address\",value:info.address,onChange:e=>dispatch({type:'update',fld:'address',val:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"div\",{className:\"error-msg\",style:{color:'red'},children:errorMsgs.address})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-outline-primary mb-3\",onClick:e=>sendData(e),children:\"Register\"}),/*#__PURE__*/_jsx(\"button\",{type:\"reset\",className:\"btn btn-outline-info mb-3\",onClick:()=>dispatch({type:'reset'}),children:\"Clear\"})]})]})]});}","map":{"version":3,"names":["useReducer","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","ConsumerReg","init","username","password","first_name","last_name","email","phone_no","area","address","reducer","state","action","type","fld","val","info","dispatch","cities","setCities","areas","setAreas","msg","setMsg","errorMsgs","setErrorMsgs","navigate","fetch","then","resp","ok","json","Error","data","catch","error","console","log","toString","getAreas","id","obj","sendData","e","preventDefault","requiredFields","newErrorMsgs","field","reqOptions","method","headers","body","JSON","stringify","area_id","status","alert","className","children","htmlFor","name","value","onChange","target","required","pattern","title","style","color","city","map","city_id","c_name","area_name","onClick"],"sources":["A:/Tritron Project/Tritron_React_App/React_App/src/components/ConsumerReg.js"],"sourcesContent":["import { useReducer, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../CSS Files/Registraction.css';\r\nexport default function ConsumerReg() {\r\n    const init = {\r\n        username: \"\",\r\n        password: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        phone_no: \"\",\r\n        area: 0,\r\n        address: \"\"\r\n    }\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'update':\r\n                return { ...state, [action.fld]: action.val }\r\n            case 'reset':\r\n                return init;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    const [info, dispatch] = useReducer(reducer, init);\r\n    const [cities, setCities] = useState([]); \r\n    const [areas, setAreas] = useState([]);\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [errorMsgs, setErrorMsgs] = useState(init);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/getCities\")\r\n            .then(resp => {\r\n                if(resp.ok) {\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"server error\")\r\n                }\r\n            })\r\n            .then(data => setCities(data))\r\n            .catch(error => console.log(error.toString()));\r\n    }, []); \r\n\r\n    const getAreas = (id) => {\r\n        fetch(\"http://localhost:8080/getAreas?cid=\" + id)\r\n            .then(resp => {\r\n                if(resp.ok) {\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"server error\")\r\n                }\r\n            })\r\n            .then(obj => setAreas(obj))\r\n            .catch(error => console.log(error.toString()));\r\n    }\r\n\r\n    const sendData = (e) => {\r\n        e.preventDefault();\r\n        const requiredFields = ['username', 'password', 'first_name', 'last_name', 'email', 'phone_no', 'area', 'address'];\r\n        const newErrorMsgs = { ...errorMsgs }; // Copy of current error messages\r\n\r\n       \r\n        for (const field of requiredFields) {\r\n            newErrorMsgs[field] = \"\";\r\n        }\r\n\r\n        \r\n        for (const field of requiredFields) {\r\n            if (!info[field]) {\r\n                newErrorMsgs[field] = \"This field is required\";\r\n            }\r\n        }\r\n\r\n        // Check if any error messages exist\r\n        for (const field of requiredFields) {\r\n            if (newErrorMsgs[field]) {\r\n                setErrorMsgs(newErrorMsgs);\r\n                return;\r\n            }\r\n        }\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username: info.username,\r\n                password: info.password,\r\n                first_name: info.first_name,\r\n                last_name: info.last_name,\r\n                email: info.email,\r\n                phone_no: info.phone_no,       \r\n                area_id: info.area,\r\n                address: info.address\r\n            })\r\n        }\r\n        fetch(\"http://localhost:8080/consumerreg\", reqOptions)\r\n            .then(resp => {\r\n                if (resp.ok) {\r\n                     console.log(resp.status)\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"server error\");\r\n                }\r\n            })\r\n            .then(obj => {\r\n                alert(\"Registration successful, Try Login\");\r\n                navigate('/')\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n//className=\"container mt-5 login-form-container col-6\"\r\n    return (\r\n        <div className=\"registraction-container\">\r\n            <h1 className='consumer-heading'> Consumer Registration </h1>\r\n            <form>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">Enter User Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" \r\n                        value={info.username}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'username', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[a-zA-Z0-9_-]{3,16}$\"\r\n                        title=\"Username allows alphanumeric characters (both lowercase and uppercase), underscores, and hyphens. Length must be between 3 and 16 characters.\"\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.username}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Enter Password :</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" \r\n                        value={info.password} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'password', val: e.target.value})}\r\n                        required\r\n                        pattern=\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$\"\r\n                        title=\"Password should contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.password}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"first_name\" className=\"form-label\">Enter First Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"first_name\" name=\"first_name\" \r\n                        value={info.first_name} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'first_name', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.first_name}</div>\r\n                </div>\r\n        </div>\r\n        <div className=\"form-row\">  \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"last_name\" className=\"form-label\">Enter Last Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"last_name\" name=\"last_name\" \r\n                        value={info.last_name} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'last_name', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.last_name}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Enter User Email :</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" \r\n                        value={info.email}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'email', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                        title=\"Email should be in proper format\"\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.email}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"phone_no\" className=\"form-label\">Enter User Phone Number :</label>\r\n                    <input type=\"tel\" className=\"form-control\" id=\"phone_no\" name=\"phone_no\" \r\n                        value={info.phone_no}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'phone_no', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[0-9]{10}\"\r\n                        title=\"Phone number should be 10 digits\"\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.phone_no}</div>\r\n                </div>\r\n\r\n    </div>\r\n    <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"city\" className=\"form-label\">Select City:</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={info.city}\r\n                        onChange={(e) => getAreas(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select City</option>\r\n                        {cities.map(city => (\r\n                            <option key={city.city_id} value={city.city_id}>{city.c_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>       \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"area\" className=\"form-label\">Select Area:</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"area\"\r\n                        name=\"area\"\r\n                        value={info.area}\r\n                        onChange={(e) => dispatch({ type: 'update', fld: 'area', val: e.target.value })}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Area</option>\r\n                        {areas.map((area) => (\r\n                            <option key={area.area_id} value={area.area_id}>\r\n                                {area.area_name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>  \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"address\" className=\"form-label\">Enter User Address :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" \r\n                        value={info.address}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'address', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.address}</div>\r\n                </div>\r\n    </div>  \r\n    <div className=\"form-row\">           \r\n                <button type=\"submit\" className=\"btn btn-outline-primary mb-3\" onClick={(e) => sendData(e)}>Register</button>\r\n                <button type=\"reset\" className=\"btn btn-outline-info mb-3\" onClick={() => dispatch({type: 'reset'})}>Clear</button>\r\n    </div>\r\n            </form>\r\n            \r\n            {/* <p>{JSON.stringify(info)}</p>\r\n            <p>{msg}</p>  */}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}